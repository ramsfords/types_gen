// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: quote.proto

package v1

import (
	_ "github.com/ramsfords/types_gen/v1/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: dynamodbav:"shipment_details,omitempty"
	ShipmentDetails *ShipmentDetails `protobuf:"bytes,1,opt,name=shipment_details,json=shipmentDetails,proto3" json:"shipment_details,omitempty"`
	// @gotags: dynamodbav:"commodities,omitempty"
	Commodities []*Commodity `protobuf:"bytes,2,rep,name=commodities,proto3" json:"commodities,omitempty"`
	// @gotags: dynamodbav:"pickup,omitempty"
	Pickup *Location `protobuf:"bytes,3,opt,name=pickup,proto3" json:"pickup,omitempty"`
	// @gotags: dynamodbav:"delivery,omitempty"
	Delivery *Location `protobuf:"bytes,4,opt,name=delivery,proto3" json:"delivery,omitempty"`
	// @gotags: dynamodbav:"bid,omitempty"
	Bid *Bid `protobuf:"bytes,5,opt,name=bid,proto3" json:"bid,omitempty"`
	// @gotags: dynamodbav:"bids,omitempty"
	Bids []*Bid `protobuf:"bytes,6,rep,name=bids,proto3" json:"bids,omitempty"`
	// @gotags: dynamodbav:"business_id,omitempty"
	BusinessId string `protobuf:"bytes,7,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	// @gotags: dynamodbav:"type,omitempty"
	Type string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	// @gotags: dynamodbav:"quote_id,omitempty"
	QuoteId string `protobuf:"bytes,9,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
	// @gotags: dynamodbav:"booking_success,omitempty"
	BookingSuccess bool `protobuf:"varint,10,opt,name=booking_success,json=bookingSuccess,proto3" json:"booking_success,omitempty"`
	// @gotags: dynamodbav:"special_instruction,omitempty"
	SpecialInstruction string `protobuf:"bytes,11,opt,name=special_instruction,json=specialInstruction,proto3" json:"special_instruction,omitempty"`
}

func (x *QuoteRequest) Reset() {
	*x = QuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteRequest) ProtoMessage() {}

func (x *QuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteRequest.ProtoReflect.Descriptor instead.
func (*QuoteRequest) Descriptor() ([]byte, []int) {
	return file_quote_proto_rawDescGZIP(), []int{0}
}

func (x *QuoteRequest) GetShipmentDetails() *ShipmentDetails {
	if x != nil {
		return x.ShipmentDetails
	}
	return nil
}

func (x *QuoteRequest) GetCommodities() []*Commodity {
	if x != nil {
		return x.Commodities
	}
	return nil
}

func (x *QuoteRequest) GetPickup() *Location {
	if x != nil {
		return x.Pickup
	}
	return nil
}

func (x *QuoteRequest) GetDelivery() *Location {
	if x != nil {
		return x.Delivery
	}
	return nil
}

func (x *QuoteRequest) GetBid() *Bid {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *QuoteRequest) GetBids() []*Bid {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *QuoteRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *QuoteRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QuoteRequest) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

func (x *QuoteRequest) GetBookingSuccess() bool {
	if x != nil {
		return x.BookingSuccess
	}
	return false
}

func (x *QuoteRequest) GetSpecialInstruction() string {
	if x != nil {
		return x.SpecialInstruction
	}
	return ""
}

type QuotesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: dynamodbav:"quote_request,omitempty"
	QuoteRequests []*QuoteRequest `protobuf:"bytes,1,rep,name=quote_requests,json=quoteRequests,proto3" json:"quote_requests,omitempty"`
}

func (x *QuotesResponse) Reset() {
	*x = QuotesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotesResponse) ProtoMessage() {}

func (x *QuotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotesResponse.ProtoReflect.Descriptor instead.
func (*QuotesResponse) Descriptor() ([]byte, []int) {
	return file_quote_proto_rawDescGZIP(), []int{1}
}

func (x *QuotesResponse) GetQuoteRequests() []*QuoteRequest {
	if x != nil {
		return x.QuoteRequests
	}
	return nil
}

var File_quote_proto protoreflect.FileDescriptor

var file_quote_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76,
	0x31, 0x1a, 0x16, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x62, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3,
	0x03, 0x0a, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4b, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0xa2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0f, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3b, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74,
	0x79, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0xa2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0xa2,
	0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x34, 0x0a, 0x08,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0xba, 0xe9,
	0xc0, 0x03, 0x05, 0xa2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x12, 0x19, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x76, 0x31,
	0x2e, 0x62, 0x69, 0x64, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x0f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x42, 0x5f, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6d, 0x73, 0x66, 0x6f, 0x72, 0x64, 0x73, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x56,
	0x58, 0x58, 0xaa, 0x02, 0x02, 0x56, 0x31, 0xca, 0x02, 0x02, 0x56, 0x31, 0xe2, 0x02, 0x0e, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x02,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_quote_proto_rawDescOnce sync.Once
	file_quote_proto_rawDescData = file_quote_proto_rawDesc
)

func file_quote_proto_rawDescGZIP() []byte {
	file_quote_proto_rawDescOnce.Do(func() {
		file_quote_proto_rawDescData = protoimpl.X.CompressGZIP(file_quote_proto_rawDescData)
	})
	return file_quote_proto_rawDescData
}

var file_quote_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_quote_proto_goTypes = []interface{}{
	(*QuoteRequest)(nil),    // 0: v1.quote_request
	(*QuotesResponse)(nil),  // 1: v1.quotes_response
	(*ShipmentDetails)(nil), // 2: v1.shipment_details
	(*Commodity)(nil),       // 3: v1.commodity
	(*Location)(nil),        // 4: v1.location
	(*Bid)(nil),             // 5: v1.bid
}
var file_quote_proto_depIdxs = []int32{
	2, // 0: v1.quote_request.shipment_details:type_name -> v1.shipment_details
	3, // 1: v1.quote_request.commodities:type_name -> v1.commodity
	4, // 2: v1.quote_request.pickup:type_name -> v1.location
	4, // 3: v1.quote_request.delivery:type_name -> v1.location
	5, // 4: v1.quote_request.bid:type_name -> v1.bid
	5, // 5: v1.quote_request.bids:type_name -> v1.bid
	0, // 6: v1.quotes_response.quote_requests:type_name -> v1.quote_request
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_quote_proto_init() }
func file_quote_proto_init() {
	if File_quote_proto != nil {
		return
	}
	file_shipment_details_proto_init()
	file_commodity_proto_init()
	file_bid_proto_init()
	file_location_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_quote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuotesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_quote_proto_goTypes,
		DependencyIndexes: file_quote_proto_depIdxs,
		MessageInfos:      file_quote_proto_msgTypes,
	}.Build()
	File_quote_proto = out.File
	file_quote_proto_rawDesc = nil
	file_quote_proto_goTypes = nil
	file_quote_proto_depIdxs = nil
}
