// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: quote.proto

package v1

import (
	_ "github.com/ramsfords/types_gen/v1/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: dynamodbav:"quoteRequest,omitempty"
	QuoteRequest *QuoteRequest `protobuf:"bytes,1,opt,name=quoteRequest,proto3" json:"quoteRequest,omitempty" dynamodbav:"quoteRequest,omitempty"`
	// @gotags: dynamodbav:"bidId,omitempty"
	BidId string `protobuf:"bytes,2,opt,name=bidId,proto3" json:"bidId,omitempty" dynamodbav:"bidId,omitempty"`
}

func (x *BookRequest) Reset() {
	*x = BookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookRequest) ProtoMessage() {}

func (x *BookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookRequest.ProtoReflect.Descriptor instead.
func (*BookRequest) Descriptor() ([]byte, []int) {
	return file_quote_proto_rawDescGZIP(), []int{0}
}

func (x *BookRequest) GetQuoteRequest() *QuoteRequest {
	if x != nil {
		return x.QuoteRequest
	}
	return nil
}

func (x *BookRequest) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

type QuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: dynamodbav:"quoteId,omitempty"
	QuoteId string `protobuf:"bytes,1,opt,name=quoteId,proto3" json:"quoteId,omitempty" dynamodbav:"quoteId,omitempty"`
	// @gotags: dynamodbav:"requesterId,omitempty"
	RequesterId string `protobuf:"bytes,2,opt,name=requesterId,proto3" json:"requesterId,omitempty" dynamodbav:"requesterId,omitempty"`
	// @gotags: dynamodbav:"mode,omitempty"
	Mode string `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty" dynamodbav:"mode,omitempty"`
	// @gotags: dynamodbav:"liablePartyId,omitempty"
	LiablePartyId string `protobuf:"bytes,4,opt,name=liablePartyId,proto3" json:"liablePartyId,omitempty" dynamodbav:"liablePartyId,omitempty"`
	// @gotags: dynamodbav:"pickupDate,omitempty"
	PickupDate string `protobuf:"bytes,5,opt,name=pickupDate,proto3" json:"pickupDate,omitempty" dynamodbav:"pickupDate,omitempty"`
	// @gotags: dynamodbav:"displayDate,omitempty"
	DisplayDate string `protobuf:"bytes,6,opt,name=displayDate,proto3" json:"displayDate,omitempty" dynamodbav:"displayDate,omitempty"`
	// @gotags: dynamodbav:"deliveryDate,omitempty"
	DeliveryDate string `protobuf:"bytes,7,opt,name=deliveryDate,proto3" json:"deliveryDate,omitempty" dynamodbav:"deliveryDate,omitempty"`
	// @gotags: dynamodbav:"totalItems,omitempty"
	TotalItems int32 `protobuf:"varint,8,opt,name=totalItems,proto3" json:"totalItems,omitempty" dynamodbav:"totalItems,omitempty"`
	// @gotags: dynamodbav:"totalWeight,omitempty"
	TotalWeight float32 `protobuf:"fixed32,9,opt,name=totalWeight,proto3" json:"totalWeight,omitempty" dynamodbav:"totalWeight,omitempty"`
	// @gotags: dynamodbav:"validUntil,omitempty"
	ValidUntil string `protobuf:"bytes,10,opt,name=validUntil,proto3" json:"validUntil,omitempty" dynamodbav:"validUntil,omitempty"`
	// @gotags: dynamodbav:"editMode,omitempty"
	EditMode bool `protobuf:"varint,11,opt,name=editMode,proto3" json:"editMode,omitempty" dynamodbav:"editMode,omitempty"`
	// @gotags: dynamodbav:"businessId,omitempty"
	BusinessId string `protobuf:"bytes,12,opt,name=businessId,proto3" json:"businessId,omitempty" dynamodbav:"businessId,omitempty"`
	// @gotags: dynamodbav:"type,omitempty"
	Type string `protobuf:"bytes,13,opt,name=type,proto3" json:"type,omitempty" dynamodbav:"type,omitempty"`
	// @gotags: dynamodbav:"commodities,omitempty"
	Commodities []*Commodity `protobuf:"bytes,14,rep,name=commodities,proto3" json:"commodities,omitempty" dynamodbav:"commodities,omitempty"`
	// @gotags: dynamodbav:"pickup,omitempty"
	Pickup *Location `protobuf:"bytes,15,opt,name=pickup,proto3" json:"pickup,omitempty" dynamodbav:"pickup,omitempty"`
	// @gotags: dynamodbav:"delivery,omitempty"
	Delivery *Location `protobuf:"bytes,16,opt,name=delivery,proto3" json:"delivery,omitempty" dynamodbav:"delivery,omitempty"`
	// @gotags: dynamodbav:"specialInstruction,omitempty"
	SpecialInstruction string `protobuf:"bytes,18,opt,name=specialInstruction,proto3" json:"specialInstruction,omitempty" dynamodbav:"specialInstruction,omitempty"`
	// @gotags: dynamodbav:"shipperPickupReadyBy,omitempty"
	ShipperPickupReadyBy string `protobuf:"bytes,19,opt,name=shipperPickupReadyBy,proto3" json:"shipperPickupReadyBy,omitempty" dynamodbav:"shipperPickupReadyBy,omitempty"`
	// @gotags: dynamodbav:"shipperInstructions,omitempty"
	ShipperInstructions string `protobuf:"bytes,20,opt,name=shipperInstructions,proto3" json:"shipperInstructions,omitempty" dynamodbav:"shipperInstructions,omitempty"`
	// @gotags: dynamodbav:"receiverInstructions,omitempty"
	ReceiverInstructions string `protobuf:"bytes,21,opt,name=receiverInstructions,proto3" json:"receiverInstructions,omitempty" dynamodbav:"receiverInstructions,omitempty"`
	// @gotags: dynamodbav:"locationServices,omitempty"
	LocationServices *LocationServices `protobuf:"bytes,22,opt,name=locationServices,proto3" json:"locationServices,omitempty" dynamodbav:"locationServices,omitempty"`
	// @gotags: dynamodbav:"business,omitempty"
	Business *Business `protobuf:"bytes,23,opt,name=business,proto3" json:"business,omitempty" dynamodbav:"business,omitempty"`
	// @gotags: dynamodbav:"requesterEmail,omitempty"
	RequesterEmail string `protobuf:"bytes,24,opt,name=requesterEmail,proto3" json:"requesterEmail,omitempty" dynamodbav:"requesterEmail,omitempty"`
}

func (x *QuoteRequest) Reset() {
	*x = QuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteRequest) ProtoMessage() {}

func (x *QuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteRequest.ProtoReflect.Descriptor instead.
func (*QuoteRequest) Descriptor() ([]byte, []int) {
	return file_quote_proto_rawDescGZIP(), []int{1}
}

func (x *QuoteRequest) GetQuoteId() string {
	if x != nil {
		return x.QuoteId
	}
	return ""
}

func (x *QuoteRequest) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

func (x *QuoteRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *QuoteRequest) GetLiablePartyId() string {
	if x != nil {
		return x.LiablePartyId
	}
	return ""
}

func (x *QuoteRequest) GetPickupDate() string {
	if x != nil {
		return x.PickupDate
	}
	return ""
}

func (x *QuoteRequest) GetDisplayDate() string {
	if x != nil {
		return x.DisplayDate
	}
	return ""
}

func (x *QuoteRequest) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *QuoteRequest) GetTotalItems() int32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *QuoteRequest) GetTotalWeight() float32 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *QuoteRequest) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *QuoteRequest) GetEditMode() bool {
	if x != nil {
		return x.EditMode
	}
	return false
}

func (x *QuoteRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *QuoteRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QuoteRequest) GetCommodities() []*Commodity {
	if x != nil {
		return x.Commodities
	}
	return nil
}

func (x *QuoteRequest) GetPickup() *Location {
	if x != nil {
		return x.Pickup
	}
	return nil
}

func (x *QuoteRequest) GetDelivery() *Location {
	if x != nil {
		return x.Delivery
	}
	return nil
}

func (x *QuoteRequest) GetSpecialInstruction() string {
	if x != nil {
		return x.SpecialInstruction
	}
	return ""
}

func (x *QuoteRequest) GetShipperPickupReadyBy() string {
	if x != nil {
		return x.ShipperPickupReadyBy
	}
	return ""
}

func (x *QuoteRequest) GetShipperInstructions() string {
	if x != nil {
		return x.ShipperInstructions
	}
	return ""
}

func (x *QuoteRequest) GetReceiverInstructions() string {
	if x != nil {
		return x.ReceiverInstructions
	}
	return ""
}

func (x *QuoteRequest) GetLocationServices() *LocationServices {
	if x != nil {
		return x.LocationServices
	}
	return nil
}

func (x *QuoteRequest) GetBusiness() *Business {
	if x != nil {
		return x.Business
	}
	return nil
}

func (x *QuoteRequest) GetRequesterEmail() string {
	if x != nil {
		return x.RequesterEmail
	}
	return ""
}

type QuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: dynamodbav:"quoteRequest,omitempty"
	QuoteRequest *QuoteRequest `protobuf:"bytes,1,opt,name=quoteRequest,proto3" json:"quoteRequest,omitempty" dynamodbav:"quoteRequest,omitempty"`
	// @gotags: dynamodbav:"bids,omitempty"
	Bids []*Bid `protobuf:"bytes,2,rep,name=bids,proto3" json:"bids,omitempty" dynamodbav:"bids,omitempty"`
	// @gotags: dynamodbav:"success,omitempty"
	Success bool `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty" dynamodbav:"success,omitempty"`
}

func (x *QuoteResponse) Reset() {
	*x = QuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteResponse) ProtoMessage() {}

func (x *QuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteResponse.ProtoReflect.Descriptor instead.
func (*QuoteResponse) Descriptor() ([]byte, []int) {
	return file_quote_proto_rawDescGZIP(), []int{2}
}

func (x *QuoteResponse) GetQuoteRequest() *QuoteRequest {
	if x != nil {
		return x.QuoteRequest
	}
	return nil
}

func (x *QuoteResponse) GetBids() []*Bid {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *QuoteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type QuotesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: dynamodbav:"quoteRequest,omitempty"
	QuoteRequests []*QuoteRequest `protobuf:"bytes,1,rep,name=quoteRequests,proto3" json:"quoteRequests,omitempty" dynamodbav:"quoteRequest,omitempty"`
}

func (x *QuotesRequest) Reset() {
	*x = QuotesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotesRequest) ProtoMessage() {}

func (x *QuotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotesRequest.ProtoReflect.Descriptor instead.
func (*QuotesRequest) Descriptor() ([]byte, []int) {
	return file_quote_proto_rawDescGZIP(), []int{3}
}

func (x *QuotesRequest) GetQuoteRequests() []*QuoteRequest {
	if x != nil {
		return x.QuoteRequests
	}
	return nil
}

type QuotesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: dynamodbav:"quoteResponses,omitempty"
	QuoteResponses []*QuoteResponse `protobuf:"bytes,1,rep,name=quoteResponses,proto3" json:"quoteResponses,omitempty" dynamodbav:"quoteResponses,omitempty"`
}

func (x *QuotesResponse) Reset() {
	*x = QuotesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotesResponse) ProtoMessage() {}

func (x *QuotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotesResponse.ProtoReflect.Descriptor instead.
func (*QuotesResponse) Descriptor() ([]byte, []int) {
	return file_quote_proto_rawDescGZIP(), []int{4}
}

func (x *QuotesResponse) GetQuoteResponses() []*QuoteResponse {
	if x != nil {
		return x.QuoteResponses
	}
	return nil
}

var File_quote_proto protoreflect.FileDescriptor

var file_quote_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76,
	0x31, 0x1a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x09, 0x62, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x59, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x64, 0x49, 0x64, 0x22, 0xab, 0x07, 0x0a, 0x0c, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0xa2, 0x01, 0x02, 0x08,
	0x01, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e,
	0x74, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x64, 0x69, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05,
	0xa2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0xa2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0xa2, 0x01, 0x02, 0x08, 0x01,
	0x52, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x42, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65,
	0x72, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x61, 0x64, 0x79, 0x42, 0x79, 0x12, 0x30,
	0x0a, 0x13, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x7c, 0x0a, 0x0d, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x76, 0x31, 0x2e, 0x62, 0x69, 0x64, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x47, 0x0a, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x76, 0x31, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x4b, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x42, 0x5f, 0x0a, 0x06,
	0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x72, 0x61, 0x6d, 0x73, 0x66, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x56, 0x58, 0x58, 0xaa, 0x02, 0x02,
	0x56, 0x31, 0xca, 0x02, 0x02, 0x56, 0x31, 0xe2, 0x02, 0x0e, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x02, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_quote_proto_rawDescOnce sync.Once
	file_quote_proto_rawDescData = file_quote_proto_rawDesc
)

func file_quote_proto_rawDescGZIP() []byte {
	file_quote_proto_rawDescOnce.Do(func() {
		file_quote_proto_rawDescData = protoimpl.X.CompressGZIP(file_quote_proto_rawDescData)
	})
	return file_quote_proto_rawDescData
}

var file_quote_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_quote_proto_goTypes = []interface{}{
	(*BookRequest)(nil),      // 0: v1.bookRequest
	(*QuoteRequest)(nil),     // 1: v1.quoteRequest
	(*QuoteResponse)(nil),    // 2: v1.quoteResponse
	(*QuotesRequest)(nil),    // 3: v1.quotesRequest
	(*QuotesResponse)(nil),   // 4: v1.quotesResponse
	(*Commodity)(nil),        // 5: v1.commodity
	(*Location)(nil),         // 6: v1.location
	(*LocationServices)(nil), // 7: v1.locationServices
	(*Business)(nil),         // 8: v1.business
	(*Bid)(nil),              // 9: v1.bid
}
var file_quote_proto_depIdxs = []int32{
	1,  // 0: v1.bookRequest.quoteRequest:type_name -> v1.quoteRequest
	5,  // 1: v1.quoteRequest.commodities:type_name -> v1.commodity
	6,  // 2: v1.quoteRequest.pickup:type_name -> v1.location
	6,  // 3: v1.quoteRequest.delivery:type_name -> v1.location
	7,  // 4: v1.quoteRequest.locationServices:type_name -> v1.locationServices
	8,  // 5: v1.quoteRequest.business:type_name -> v1.business
	1,  // 6: v1.quoteResponse.quoteRequest:type_name -> v1.quoteRequest
	9,  // 7: v1.quoteResponse.bids:type_name -> v1.bid
	1,  // 8: v1.quotesRequest.quoteRequests:type_name -> v1.quoteRequest
	2,  // 9: v1.quotesResponse.quoteResponses:type_name -> v1.quoteResponse
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_quote_proto_init() }
func file_quote_proto_init() {
	if File_quote_proto != nil {
		return
	}
	file_commodity_proto_init()
	file_bid_proto_init()
	file_location_proto_init()
	file_location_services_proto_init()
	file_business_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_quote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuotesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quote_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuotesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_quote_proto_goTypes,
		DependencyIndexes: file_quote_proto_depIdxs,
		MessageInfos:      file_quote_proto_msgTypes,
	}.Build()
	File_quote_proto = out.File
	file_quote_proto_rawDesc = nil
	file_quote_proto_goTypes = nil
	file_quote_proto_depIdxs = nil
}
